#!/usr/bin/perl
#Started with t/64xml-to-mysql.t
use strict;

use FindBin qw/$Bin/;
use Test::More;
use Test::SQL::Translator;
use Test::Exception;
use Test::Differences;
#use Data::Dumper;
use SQL::Translator;
use SQL::Translator::Schema::Constants;


BEGIN {
    maybe_plan(2, 'SQL::Translator::Parser::XML::SQLFairy',
              'SQL::Translator::Producer::NuoDB');
}

my $xmlfile = "$Bin/data/xml/schema.xml";

my $sqlt;
$sqlt = SQL::Translator->new(
    no_comments => 1,
    show_warnings  => 0,
    add_drop_table => 1,
    producer_args => {
        nuodb_version => 0,
    },
);

die "Can't find test schema $xmlfile" unless -e $xmlfile;

my @want = (
    q[DROP TABLE Basic;],
    q[CREATE TABLE Basic (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  title STRING NOT NULL DEFAULT 'hello',
  description STRING DEFAULT '',
  email STRING,
  explicitnulldef STRING,
  explicitemptystring STRING DEFAULT '',
  emptytagdef STRING DEFAULT '',
  another_id INTEGER DEFAULT 2,
  timest TIMESTAMP,
  PRIMARY KEY (id),
  UNIQUE KEY emailuniqueindex (email),
  UNIQUE KEY very_long_index_name_on_title_field_which_should_be_truncated_for_various_rdbms (title)
);],

    q[DROP TABLE Another;],
    q[CREATE TABLE Another (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  num NUMERIC(10,2),
  PRIMARY KEY (id)
);],
    q[ALTER TABLE Basic ADD FOREIGN KEY (another_id) REFERENCES Another(id);],
    q[CREATE INDEX titleindex ON Basic (title);],
    q[CREATE VIEW email_list AS
SELECT email FROM Basic WHERE (email IS NOT NULL);],
    q[DROP TRIGGER IF EXISTS foo_trigger;
SET DELIMITER @
CREATE TRIGGER foo_trigger FOR Basic AFTER INSERT AS
 update modified=timestamp();
END_TRIGGER@
SET DELIMITER ;],

    q[DROP TRIGGER IF EXISTS bar_trigger;
SET DELIMITER @
CREATE TRIGGER bar_trigger FOR Basic BEFORE INSERT, UPDATE AS
 update modified2=timestamp();
END_TRIGGER@
SET DELIMITER ;]
);

my $sql = $sqlt->translate(
    from     => 'XML-SQLFairy',
    to       => 'NuoDB',
    filename => $xmlfile,
) or die $sqlt->error;

eq_or_diff($sql, join("", map { "$_\n\n" } @want));

my @sql = $sqlt->translate(
    from     => 'XML-SQLFairy',
    to       => 'NuoDB',
    filename => $xmlfile,
) or die $sqlt->error;

is_deeply(\@sql, \@want);
